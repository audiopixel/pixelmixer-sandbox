var PX={REVISION:"1"};PX.ready=!1,PX.simSize,PX.shaders={},PX.clips={},PX.imported={},PX.techs={},PX.pixels,PX.BLEND={},PX.BLEND.OFF=0,PX.BLEND.Add=1,PX.BLEND.Subtract=2,PX.BLEND.Darkest=3,PX.BLEND.Lightest=4,PX.BLEND.Difference=5,PX.BLEND.Exclusion=6,PX.BLEND.Multiply=7,PX.BLEND.Screen=8,PX.BLEND.Overlay=9,PX.BLEND.HardLight=10,PX.BLEND.SoftLight=11,PX.BLEND.Dodge=12,PX.BLEND.Burn=13,PX.BLEND.LinearBurn=14,PX.BLEND.LinearLight=15,PX.BLEND.VividLight=16,PX.BLEND.PinLight=17,PX.BLEND.Fx=1,PX.BLENDS=["Add","Substract","Darkest","Lightest","Difference","Exclusion","Multiply","Screen","Overlay","HardLight","SoftLight","Dodge","Burn","LinearBurn","LinearLight","VividLight","PinLight"],PX.PORT_TYPE_OFF=0,PX.PORT_TYPE_KINET_1=1,PX.PORT_TYPE_KINET_2=2,PX.PORT_TYPE_KINET_3=3,PX.PORT_TYPE_KINET_4=4,PX.PORT_TYPE_DMX_1=5,PX.PORT_TYPE_DMX_2=6,PX.PORT_TYPE_DMX_3=7,PX.PORT_TYPE_LASER_1=8,PX.CHANNEL_TYPE_OFF=0,PX.CHANNEL_TYPE_ADD=1,PX.CHANNEL_TYPE_FX=2,PX.CHANNEL_TYPE_SCENE=3,PX.HARDWAREGROUP_OFF=0,PX.HARDWAREGROUP_SOLO=1,PX.HARDWAREGROUP_EXCLUDE=2,PX.MAP_NORMAL=0,PX.MAP_ALT1=1,PX.MAP_ALT2=2,PX.demoClipNames=["TestFrame","SolidColor","ColorSineBar","ColorSwirls","LineCosSin","SimpleSwirl","SinSpiral","SineParticles","DiSinSwirl","HexifyRadial","SinCosTan"],PX.demoHardware=["ApHardwareTest","Grid+zLayer","RanZGrid"],PX.getVariableTypeFromShorthand=function(e){var t;switch(e){case"i":t="int";break;case"f":t="float";break;case"t":t="sampler2D";break;case"v2":t="vec2";break;case"v3":t="vec3";break;case"v4":t="vec4"}return t},PX.broadcast=!1,PX.readPixels=!1,PX.speed=.07,PX.useTransforms=!1,PX.usePodUniforms=!1,PX.pointCloud={},PX.pointGeometry={},PX.pointMaterial={},PX.pointSize=20,PX.material=!1,PX.pointSprite,PX.shaderCount=-1,PX.init=function(e,t,i){PX.shaderCount=0;for(var r in PX.clips)PX.clips.hasOwnProperty(r)&&(PX.shaderCount++,PX.clips[r].id=PX.shaderCount);for(i=i||Math.pow(128,2),PX.simSize=4;Math.pow(PX.simSize,2)<i;)PX.simSize*=2;PX.ports=new PX.PortManager,PX.hardware=new PX.HardwareManager,PX.channels=new PX.ChannelManager,PX.app=new PX.AppManager(e,t),PX.ports.init(),PX.hardware.init(),PX.channels.init(),PX.app.init(),PX.appSize||PX.setSize(600,400)},PX.dataSetLength=null,PX.updateShader=!1,PX.updateFresh=!1,PX.updateShaderLimiter=0,PX.update=function(){PX.ready&&(PX.app?PX.ready&&((!PX.updateShader||PX.updateShaderLimiter<4)&&PX.updateShaderLimiter>0?(PX.app.update(),PX.ports.update(),PX.hardware.update(),PX.channels.update()):(PX.app.updateMainSourceShader(),PX.app.update(),PX.updateShaderLimiter=0,PX.updateShader=!1,PX.updateFresh=!1),PX.updateShaderLimiter++):console.log("AP Error: Need to call PX.init before PX.update."))},PX.pointPosition=[-400,-400,0],PX.setPointPosition=function(e,t,i){PX.pointPosition=[e,t,i],PX.pointCloud.position&&(PX.pointCloud.position={x:e,y:t,z:i})},PX.appSize,PX.setSize=function(e,t){if(PX.appSize=[e,t],PX.app){PX.app.glWidth=e,PX.app.glHeight=t,PX.app.readPixels&&(PX.app.pixels=new Uint8Array(4*PX.app.glWidth*PX.app.glHeight)),PX.app.renderer.setSize(PX.app.glWidth,PX.app.glHeight);var i=PX.pointSize;i*=e*t*1e-5,PX.pointMaterial.uniforms.u_pointSize.value=i}},PX.importShader=function(e,t){PX.app.importShader(e,t)},PX.generateShader=function(){PX.app.updateMainSourceShader()},PX.simpleSetup=function(e){e.mix=e.mix||1,e.channel=e.channel||1;for(var t=[],i=0;i<e.ids.length;i++)t[i]=new PX.Clip({id:e.ids[i]});var r=[];r[0]=new PX.Pod({clips:t});var n=new PX.Channel({mix:e.mix,pods:r});PX.channels.setChannel(e.channel,n),PX.generateShader()},PX.updateNodePoints=function(){PX.app.updateGeometry(),PX.app.generateCoordsMap(),PX.app.createNodePointCloud()},PX.get=function(e,t,i,r){return t?PX.getUniform(e,t,i,r).value:PX.material.uniforms[e].value},PX.set=function(e,t,i,r,n){i?(PX.getUniform(e,i,r,n).value=t,PX.setObjProperty(e,t,i,r,n)):PX.material.uniforms[e].value=t},PX.getUniform=function(e,t,i,r){var n="_"+t;return i&&(n+="_"+i,r&&(n+="_"+r)),PX.material.uniforms[n+"_"+e]},PX.getObj=function(e,t,i){var r=PX.channels.channels[e-1];return t&&(r=r.pods[t-1],i&&(r=r.clips[i-1])),r},PX.setObj=function(e,t,i,r){i?r?PX.channels.channels[t-1].pods[i-1].clips[r-1]=e:PX.channels.channels[t-1].pods[i-1]=e:PX.channels.channels[t-1]=e},PX.getObjProperty=function(e,t,i,r){var n=PX.getObj(t,i,r);return n[e]},PX.setObjProperty=function(e,t,i,r,n){var o=PX.getObj(i,r,n);o[e]=t},PX.load=function(e){PX.channels.channels=e,PX.updateShader=!0,PX.updateFresh=!0},PX.stringifyChannels=function(){return JSON.stringify(PX.channels.channels)},PX.stringifyNodes=function(){return JSON.stringify(PX.ports.ports)},PX.AppManager=function(e,t){this.glWidth=0,this.glHeight=0,this.sceneMain=e,this.renderer=t,this.cameraRTT,this.sceneRTT,this.rtTextureA,this.rtTextureB,this.rtToggle=!0,this.controls,this.camera,this.geoX=[],this.geoY=[],this.passIndex=[],this.fragmentShader,this.time=0,this.render=!0,this.nodeTexture=THREE.ImageUtils.loadTexture("images/nodeflare250.png"),this.coordsMap,this.altMap1,this.altMap2,this.plane=new THREE.PlaneBufferGeometry(PX.simSize,PX.simSize),PX.pointGeometry=new THREE.Geometry},PX.AppManager.prototype={init:function(){this.rtTextureA=new THREE.WebGLRenderTarget(PX.simSize,PX.simSize,{minFilter:THREE.NearestMipMapNearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.rtTextureB=this.rtTextureA.clone(),this.cameraRTT=new THREE.OrthographicCamera(PX.simSize/-2,PX.simSize/2,PX.simSize/2,PX.simSize/-2,-1e4,1e4),this.sceneRTT=new THREE.Scene,PX.pointGeometry=new THREE.Geometry,PX.updateNodePoints(),PX.readPixels&&(PX.pixels=new Uint8Array(4*Math.pow(PX.simSize,2)))},update:function(){if(this.time+=PX.speed,this.render&&PX.ready&&(PX.material.uniforms._time.value=this.time,PX.material.uniforms._random.value=Math.random(),this.rtToggle?(PX.material.uniforms.u_prevCMap.value=this.rtTextureB,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureA,!0),PX.pointMaterial.uniforms.u_colorMap.value=this.rtTextureA):(PX.material.uniforms.u_prevCMap.value=this.rtTextureA,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureB,!0),PX.pointMaterial.uniforms.u_colorMap.value=this.rtTextureB),this.rtToggle=!this.rtToggle,this.updateClips(),PX.readPixels)){this.renderer.render(this.sceneRTT,this.cameraRTT);var e=this.renderer.getContext();e.readPixels(0,0,PX.simSize,PX.simSize,e.RGBA,e.UNSIGNED_BYTE,PX.pixels),this.renderer.clear()}},setSize:function(e,t){this.glWidth=e,this.glHeight=t},importShader:function(e,t){function i(e){return e.indexOf("#ifdef GL_ES")>-1?!0:e.indexOf("#endif")>-1?!0:e.indexOf("uniform float time")>-1?!0:e.indexOf("uniform float random")>-1?!0:e.indexOf("uniform vec2 resolution")>-1?!0:e.indexOf("precision highp float")>-1?!0:e.indexOf("varying vec2 surfacePosition")>-1?!0:!1}var r=0,n=!1,o="",a=0,s=0,p={};p.constants=[],p.fragmentFunctions=[];for(var c=t.split("\n"),d=0;d<c.length;d++){var l=c[d].trim();if(l=l.replace(/ +(?= )/g,""),l.length>0){var P=l.replace(/[^{]/g,"").length,h=l.replace(/[^}]/g,"").length;r+=P,r-=h,r>0&&(n=!0),n?(o+=l+"\n",0===r&&(n=!1,o.localeCompare("void main(")>-1?p.fragmentMain=o.slice(o.indexOf("{")+1,o.lastIndexOf("}")):(p.fragmentFunctions[a]=o,a++),o="")):i(l)||(p.constants[s]=l,s++)}}PX.shaderCount>-1&&(PX.clips[e]?p.id=PX.clips[e].id:(PX.shaderCount++,p.id=PX.shaderCount)),PX.clips[e]=p},updateClips:function(){for(var e=0;e<PX.channels.channels.length;e++){var t=PX.channels.channels[e];if(t&&t.pods)for(var i=0;i<t.pods.length;i++){var r=t.pods[i];if(r&&r.clips)for(var n=0;n<r.clips.length;n++){var o=r.clips[n];if(o&&PX.clips[o.id]){PX.material.uniforms["_"+(e+1)+"_"+(i+1)+"_"+(n+1)+"_time"].value+=o.speed*PX.speed;var a=PX.clips[o.id];a&&a.update&&PX.material&&a.update("_"+(e+1)+"_"+(i+1)+"_"+(n+1),PX.material.uniforms)}}}}},updateGeometry:function(){this.geoX=[],this.geoY=[],this.passIndex=[],PX.pointGeometry=new THREE.Geometry;var t=0;for(e=0;e<PX.ports.getPorts().length;e++){var r=PX.ports.getPort(e+1);if(r&&r.nodes)for(i=0;i<r.nodes.length;i++){var n=new THREE.Vector3;n.x=r.nodes[i].x||0,n.y=r.nodes[i].y||0,n.z=r.nodes[i].z||0,PX.pointGeometry.vertices.push(n),r.nodes[i].indexId=t;var o=PX.simSize,a=(t+1)%o;0===a&&(a=o);var s=(t+2-a)/o;this.geoX.push(a/o-.5/o),this.geoY.push(1-s/o-.5/o),this.passIndex.push(t),t++}}},generateCoordsMap:function(){for(var e=new Float32Array(4*Math.pow(PX.simSize,2)),t=0,i=1e11,r=0,n=1e11,o=0,a=1e11,s=0,p=0,c=e.length;c>p;p+=4){var d=0,l=0,P=0;PX.pointGeometry.vertices[t]?(d=PX.pointGeometry.vertices[t].x,l=PX.pointGeometry.vertices[t].y,P=PX.pointGeometry.vertices[t].z,i=Math.min(i,d),r=Math.max(r,d),n=Math.min(n,l),o=Math.max(o,l),a=Math.min(a,P),s=Math.max(s,P),e[p+3]=1,t++):e[p+3]=0,e[p+0]=d,e[p+1]=l,e[p+2]=P}PX.channels.setPodPos(1,new PX.PodPosition(i,n,a,r-i,o-n,s-a)),this.coordsMap=new THREE.DataTexture(e,PX.simSize,PX.simSize,THREE.RGBAFormat,THREE.FloatType),this.coordsMap.minFilter=THREE.NearestFilter,this.coordsMap.magFilter=THREE.NearestFilter,this.coordsMap.needsUpdate=!0,this.coordsMap.flipY=!0,this.altMap1=new THREE.DataTexture(e,PX.simSize,PX.simSize,THREE.RGBAFormat,THREE.FloatType),this.altMap1.minFilter=THREE.NearestFilter,this.altMap1.magFilter=THREE.NearestFilter,this.altMap1.needsUpdate=!0,this.altMap1.flipY=!0},createNodePointCloud:function(){function e(e,t){var i={};for(var r in e)e[r]&&(i[r]=e[r]);for(var n in t)t[n]&&(i[n]=t[n]);return i}var t={a_geoX:{type:"f",value:this.geoX},a_geoY:{type:"f",value:this.geoY},a_index:{type:"f",value:this.passIndex}},i={u_colorMap:{type:"t",value:this.rtTextureA},u_texture:{type:"t",value:this.nodeTexture}};PX.pointMaterial=new THREE.ShaderMaterial({uniforms:e(i,PX.shaders.PointCloudShader.uniforms),attributes:e(t,PX.shaders.PointCloudShader.attributes),vertexShader:PX.shaders.PointCloudShader.vertexShader,fragmentShader:PX.shaders.PointCloudShader.fragmentShader,depthTest:!1,transparent:!0});var r="PixelMixer Nodes";this.sceneMain.getObjectByName(r)&&this.sceneMain.remove(PX.pointCloud),PX.pointCloud=new THREE.PointCloud(PX.pointGeometry,PX.pointMaterial),PX.pointCloud.sortParticles=!0,PX.pointCloud.name=r,PX.pointPosition&&(PX.pointCloud.position.x=PX.pointPosition[0],PX.pointCloud.position.y=PX.pointPosition[1],PX.pointCloud.position.z=PX.pointPosition[2]),this.sceneMain.add(PX.pointCloud),PX.pointGeometry.vertices.length>0&&(console.log("PixelMixer Nodes: "+PX.pointGeometry.vertices.length),PX.ready=!0)},updateMainSourceShader:function(){var e={_time:{type:"f",value:this.time},_random:{type:"f",value:Math.random()},u_coordsMap:{type:"t",value:this.coordsMap},u_prevCMap:{type:"t",value:this.rtTextureB},u_mapSize:{type:"f",value:PX.simSize}},t=PX.channels.generateSourceShader(),i="";PX.usePodUniforms&&(e.u_pos_id={type:"i",value:0},e.u_pos_x={type:"f",value:0},e.u_pos_y={type:"f",value:0},e.u_pos_z={type:"f",value:0},e.u_pos_w={type:"f",value:0},e.u_pos_h={type:"f",value:0},e.u_pos_d={type:"f",value:0},i+="uniform int u_pos_id;\n",i+="uniform float u_pos_x;\n",i+="uniform float u_pos_y;\n",i+="uniform float u_pos_z;\n",i+="uniform float u_pos_w;\n",i+="uniform float u_pos_h;\n",i+="uniform float u_pos_d;\n");for(var r in t.uniforms){var n=PX.getVariableTypeFromShorthand(t.uniforms[r].type);i+="uniform "+n+" "+r+";\n",e[r]=t.uniforms[r]}if(this.altMap1&&(i+="uniform sampler2D u_altMap1; vec4 px_alt1; \n",e.u_altMap1={type:"t",value:this.altMap1}),this.altMap2&&(i+="uniform sampler2D u_altMap2; vec4 px_alt2; \n",e.u_altMap2={type:"t",value:this.altMap2}),!PX.updateFresh&&PX.material)for(r in e)PX.material.uniforms[r]&&(e[r].value=PX.material.uniforms[r].value);this.fragmentShader=PX.MainShader.fragmentShader,this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERS",t.fragmentMain),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERFUNCTIONS",t.fragmentFunctions),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERUTILS",PX.shaders.ShaderUtils+i),this.fragmentShader=this.minFragmentShader(this.fragmentShader),PX.material=new THREE.ShaderMaterial({uniforms:e,vertexShader:PX.shaders.SimpleTextureShader.vertexShader,fragmentShader:this.fragmentShader}),PX.material.uniforms.u_coordsMap.value=this.coordsMap,PX.material.uniforms.u_prevCMap.value=this.rtTextureB,this.altMap1&&(PX.material.uniforms.u_altMap1.value=this.altMap1),this.altMap2&&(PX.material.uniforms.u_altMap2.value=this.altMap2);var o="SourceQuad",a=this.sceneRTT.getObjectByName(o);a&&this.sceneRTT.remove(a);var s=new THREE.Mesh(this.plane,PX.material);s.position.z=-100,s.name=o,this.sceneRTT.add(s)},minFragmentShader:function(e){return e=e.replace(/px_alt/g,"_0"),e=e.replace(/px_/g,"_"),e=e.replace(/_xyz/g,"_1"),e=e.replace(/hsv2rgb/g,"_2"),e=e.replace(/rgb2hsv/g,"_3"),e=e.replace(/offsetPos/g,"_4"),e=e.replace(/_rgb/g,"_5"),e=e.replace(/_hsv/g,"_6"),e=e.replace(/resolution/g,"_7"),e=e.replace(/superFunction/g,"_8"),e=e.replace(/checkBounds/g,"_9"),e=e.replace(/returnColor/g,"_91"),e=e.replace(/getPodSize/g,"_92"),e=e.replace(/getPodPos/g,"_93"),e=e.replace(/_lastRgb/g,"_94"),e=e.replace(/getPodScale/g,"_95"),e=e.replace(/getPodOffset/g,"_96")}},PX.ChannelManager=function(){this.channels=[],this.podpositions=[]},PX.ChannelManager.prototype={init:function(){},update:function(){},generateSourceShader:function(){function e(e,t){var i=e.match(new RegExp("^(?:\\w+\\W+){"+--t+"}(\\w+)"));return i&&i[1]}for(var t={},i={},r={},n={},o=this.generateSizingFunctions(),a="",s="",p="",c={},d="",l=0;l<this.channels.length;l++){var P=this.channels[l];P.address="_"+(l+1);var h=!1;if(P.type===PX.CHANNEL_TYPE_FX&&(h=!0),s+="if(_channel_mix>0.){ \n",t[P.address+"_mix"]={type:"f",value:P.mix},P&&P.pods)for(var f=0;f<P.pods.length;f++){var X=P.pods[f];if(X){X.address=P.address+"_"+(f+1),t[X.address+"_mix"]={type:"f",value:X.mix},t[X.address+"_blend"]={type:"f",value:X.blend};var g=!1;if(X.clips&&X.clips.length)for(var _=0;_<X.positionIds.length;_++){s+="//-- \n";var m=this.getPodPos(X.positionIds[_]);if(c!==m){c=m;var v="vec2("+m.w+", "+m.h+");";PX.usePodUniforms&&(v="vec2(getPodSize("+X.positionIds[_]+").x, getPodSize("+X.positionIds[_]+").y);"),d!==v&&(d=v,s+="resolution = "+v+" \n"),s+="px_xyz = offsetPos(px_xyz2, "+X.positionIds[_]+", px_xyz.w);\n"}for(s+="if(_pod_mix > 0. && checkBounds(px_xyz2, "+X.positionIds[_]+") > 0.){ \n",g=!0,u=0;u<X.clips.length;u++){var x=X.clips[u];if(x){var y=PX.clips[x.id];if(y){if(!r[X.clips[u].id]){r[X.clips[u].id]=!0;for(var S in y.constants)i[S]||(i[S]=1,o+=y.constants[S]+"\n");if(o+="\n",y.fragmentFunctions)for(var b=0;b<y.fragmentFunctions.length;b++){var E=y.fragmentFunctions[b].trim();E=e(E,1)+e(E,2)+e(E,3)+e(E,4)+e(E,5),n[E]||(n[E]=!0,o+=y.fragmentFunctions[b]+"\n")}a+="else if(id == "+y.id+"){\n",a+=y.fragmentMain.replace("gl_FragColor","returnColor"),a+="\n",a=a.replace(/gl_FragCoord/g,"px_xyz"),a+="\n}\n"}if(x.address=X.address+"_"+(u+1),x.id.length>0&&y){for(var T in y.params)PX.setObjProperty(T,y.params[T].value,l+1,f+1,u+1),t[x.address+"_"+T]={type:"f",value:y.params[T].value};for(var M in y.properties)t[x.address+"_"+M]=y.properties[M];y.init&&y.init(x.address,t),t[x.address+"_mix"]={type:"f",value:x.mix},t[x.address+"_blend"]={type:"f",value:x.blend},t[x.address+"_time"]={type:"f",value:PX.app.time};for(var z=["0.","0.","0.","0.","0.","0.","0.","0.","0."],C=0;C<z.length;C++)y.params&&y.params["p"+(C+1)]&&(z[C]=x.address+"_p"+(C+1));p="",x.posMap==PX.MAP_ALT1&&PX.app.altMap1&&(p+="px_xyz = offsetPos(px_alt1, "+X.positionIds[_]+", px_xyz.w);\n"),p+="px_rgb2 = superFunction(_clip_mix, "+y.id+", _fxIn, _clip_time, "+z[0]+","+z[1]+","+z[2]+","+z[3]+","+z[4]+","+z[5]+","+z[6]+","+z[7]+","+z[8]+");",p=p.replace(/gl_FragCoord/g,"px_xyz");var N=PX.clips[x.id].fx;0===u?(p+="px_rgb = px_rgb2; \n",N||h?p+="px_rgb = mix(px_p, px_rgb2, _clip_mix); \n":(g=h,p+="px_rgb = px_rgb * (_clip_mix); \n")):N||h?p+="px_rgb = mix(px_rgb, px_rgb2, _clip_mix); \n":(p+="px_rgb2 = px_rgb2 * (_clip_mix); \n",p+="px_rgb = blend(px_rgb2, px_rgb, _clip_blend); \n",g=h),p=p.replace(/_clip_/g,x.address+"_"),p=p.replace(/__/g,x.address+"_"),p=0===u?p.replace(/_fxIn/g,"px_p"):p.replace(/_fxIn/g,"px_rgb"),s+=p}}else console.log("AP Error - shader not found: "+x.id)}}g?s+="px_p = mix(px_p, px_rgb, _pod_mix); \n":0===f?s+="px_p = px_rgb * (_pod_mix); \n":(s+="px_rgb = px_rgb * (_pod_mix); \n",s+="px_p = blend(px_p, px_rgb, _pod_blend); \n"),s+="}"}s=s.replace(/_pod_/g,X.address+"_")+"\n"}}0===l?s+="px_c = px_p = px_p * (_channel_mix); \n":h?s+="px_c = mix(px_c, px_p, _channel_mix); \n":(s+="px_p = px_p * (_channel_mix); \n",s+="px_c = blend(px_c, px_p, 1.); \n"),s+="}",s=s.replace(/_channel_/g,P.address+"_")+"\n"}return a=a.slice(5,a.length),a="vec4 returnColor = vec4(0.,0.,0.,0.); if(_mi == 0.){return vec3(0.,0.,0.);} \n"+a,a+="return max(min(vec3(returnColor.x, returnColor.y, returnColor.z), vec3(1.0)), vec3(0.0)); \n",a="vec3 superFunction(float _mi, int id, vec3 _fxIn, float time, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9) { \n"+a+"}\n",o+=a,PX.app.altMap1&&(s="px_alt1 = texture2D( u_altMap1, v_vUv);"+s),PX.app.altMap2&&(s="px_alt2 = texture2D( u_altMap2, v_vUv);"+s),PX.dataSetLength&&PX.dataSetLength>0&&(o="uniform float data[ "+PX.dataSetLength+" ]; \n"+o),{uniforms:t,fragmentFunctions:o,fragmentMain:s+"\n"}},generateSizingFunctions:function(){var e="";PX.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_x, u_pos_y, u_pos_z);\n",e+="}");for(var t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].x+","+this.podpositions[t].y+","+this.podpositions[t].z+");\n",e+="}\n";PX.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodPos(int d) { \n"+e+"}\n";var i=e;for(e="",PX.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_w, u_pos_h, u_pos_d);\n",e+="}"),t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].w+","+this.podpositions[t].h+","+this.podpositions[t].d+");\n",e+="}\n";if(PX.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodSize(int d) { \n"+e+"}\n",i+=e,PX.useTransforms){for(e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].xt+","+this.podpositions[t].yt+","+this.podpositions[t].zt+");\n",e+="}\n";for(e=e.slice(5,e.length),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodOffset(int d) { \n"+e+"}\n",i+=e,e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec4("+this.podpositions[t].xs+","+this.podpositions[t].ys+","+this.podpositions[t].zs+","+this.podpositions[t].flipmode+");\n",e+="}\n";e=e.slice(5,e.length),e="vec4 p = vec4(0.,0.,0.,0.); \n"+e,e+="return p; \n",e="vec4 getPodScale(int d) { \n"+e+"}\n",i+=e}return i+=["float checkBounds(vec4 b, int p)","{","vec3 s = getPodPos(p);","if(b.x >= s.x && b.y >= s.y && b.z >= s.z){ ","vec3 e = getPodSize(p);","if(b.x <= (e.x + s.x) && b.y <= (e.y + s.y) && b.z <= (e.z + s.z)) {","	return 1.;","}}","	return 0.;","}"].join("\n"),i+="vec4 offsetPos(vec4 b, int p, float w){\n",i+="vec3 c = getPodPos(p);\n",i+="float x = b.x - c.x;\n",i+="float y = b.y - c.y;\n",i+="float z = b.z - c.z;\n",i+="float t = x;\n",PX.useTransforms&&(i+="vec4 s = getPodScale(p);\n",i+="if(s.w == 1.){",i+="x=y;y=t;\n",i+="}else if(s.w == 2.){",i+="x=z;z=t;\n",i+="}else if(s.w == 3.){",i+="t=y;y=z;z=t;\n",i+="}\n",i+="vec3 d = getPodOffset(p);\n",i+="vec3 e = getPodSize(p);\n",i+="x += (e.x * 8. * (d.x - .5));\n",i+="y += (e.y * 8. * (d.y - .5));\n",i+="z += (e.z * 8. * (d.z - .5));\n",i+="x += (b.x - (e.x * .5 + c.x)) * (1.-(s.x * 2.))*8.;\n",i+="y += (b.y - (e.y * .5 + c.y)) * (1.-(s.y * 2.))*8.;\n",i+="z += (b.z - (e.z * .5 + c.z)) * (1.-(s.z * 2.))*8.;\n"),i+="return vec4(x, y, z, w);\n",i+="}\n"},setChannel:function(e,t){this.channels[e-1]=t},getChannel:function(e){return this.channels[e-1]},getChannels:function(){return this.channels},clearChannel:function(e){delete this.channels[e-1]},clearAllChannels:function(){this.channels=[]},clearAllPodsInChannel:function(e){delete this.channels[e-1].pods},setPodPos:function(e,t){this.podpositions[e-1]=t},getPodPos:function(e){return this.podpositions[e-1]?this.podpositions[e-1]:this.podpositions[0]},clearPodPos:function(e){delete this.podpositions[e-1]},clearAllPodPos:function(){this.podpositions=[]},setClip:function(e,t,i,r){return this.channels[e-1]?void(this.channels[e-1].pods[t-1]?this.channels[e-1].pods[t-1].clips[i-1]=r:this.channels[e-1].pods[t-1]=new Pod(1,1,PX.BLEND.Add,[r])):!1},clearClip:function(e,t,i){delete this.channels[e-1].pods[t-1].clips[i-1]},clearAllClipsInPod:function(e,t){delete this.channels[e-1].pods[t-1].clips}},PX.HardwareManager=function(){},PX.HardwareManager.prototype={init:function(){},update:function(){},importNodes:function(e,t,i,r,n,o){t=t||0,i=i||0,r=r||0,n=n||0,e.scale=e.scale||1;var a=o||e.scale;for(var s in e.hardwareunit){var p=e.hardwareunit[s];for(var c in p.ports){var d=p.ports[c];PX.ports[d.portid-1]||PX.ports.setPort(d.portid+t,new PX.Port);for(var l in d.nodes){var P=d.nodes[l];P.x=P.x||0,P.y=P.y||0,P.z=P.z||0,P.x*=a,P.y*=a,P.z*=a,P.x+=i,P.y+=r,P.z+=n}PX.ports.setNodes(d.portid+t,d.nodes)}}},importNodeArray:function(e,t,i,r,n,o){i=i||0,r=r||0,n=n||0,o=o||1,PX.ports[t-1]||PX.ports.setPort(t,new PX.Port);for(var a=[],s=0;s<e.length/3;s++){var p={};p.x=e[3*s]*o+i,p.y=e[3*s+1]*o+r,p.z=e[3*s+2]*o+n,a[a.length]=p}PX.ports.setNodes(t,a)},addTestGrid:function(t,r,n){var o=[];for(e=0;e<24;e++)for(i=0;i<14;i++){var a={};a.x=30*e+r,a.y=30*i+n,a.z=0,o.push(a)}PX.ports.setNodes(t,o)},addTestPortsGrid:function(t,r,n){var o=830,a=1100,s=0,p=0;for(u=0;u<15;u++){var c=[];for(e=0;e<18;e++)for(i=0;i<24;i++){var d={};d.x=.26*(40*e+s-650+r),d.y=.26*(40*i+p+n),d.z=300*Math.random()-150,c.push(d)}var l=new PX.Port({name:"port name "+l,nodes:c});PX.ports.setPort(u+t,l),s+=o,(u+2)%5==1&&(s=0,p+=a)}},addTestPortsGrid2:function(t,r,n){var o=[];for(e=0;e<70;e++)for(i=0;i<38;i++){var a={};a.x=20*e-340+r,a.y=20*i+30+n,o.push(a)}var s=new PX.Port({name:"port name "+s,nodes:o});PX.ports.setPort(t,s)},addTestPortsGrid3:function(t,r,n){var o=[],a={};for(e=0;e<70;e++)for(i=0;i<38;i++)a={},a.x=20*e-340+r,a.y=20*i+30+n-1,o.push(a);var s=new PX.Port({name:"port name "+s,nodes:o});for(PX.ports.setPort(t,s),o=[],e=0;e<70;e++)for(i=0;i<38;i++)(i+2)%2==1&&(a={},a.x=20*e-340+r,a.y=20*i+30+n,a.z=110,o.push(a));for(s=new PX.Port({name:"port name "+s,nodes:o}),PX.ports.setPort(t+1,s),o=[],e=0;e<70;e++)for(i=0;i<38;i++)(i-1)%3==1&&(e-1)%2==1&&(a={},a.x=20*e-340+r-1,a.y=20*i+30+n-1,a.z=210,o.push(a));s=new PX.Port({name:"port name "+s,nodes:o}),PX.ports.setPort(t+2,s)},addSimpleNodeGrid:function(t,r,n,o,a,s,p){p||(p=PX.ports.ports.length+1);var c=1e11,d=0,l=1e11,P=0,h=[];for(e=0;e<o;e++)for(i=0;i<a;i++){var u={};u.x=e*s+t,u.y=i*s+r,u.z=n,h.push(u),c=Math.min(c,u.x),d=Math.max(d,u.x),l=Math.min(l,u.y),P=Math.max(P,u.y)}var f=new PX.Port({name:"port name "+f,nodes:h});PX.ports.setPort(p,f),p>1&&PX.channels.setPodPos(p,new PX.PodPosition(c,l,n,d-c,P-l,n+1))}},PX.PortManager=function(){this.ports=[]},PX.PortManager.prototype={init:function(){if(PX.broadcast)for(e=0;e<PX.ports.getPorts().length;e++){var t=PX.ports.getPort(e+1);t&&t.broadcast&&t.type&&t.nodes&&PX.techs[t.type]&&PX.techs[t.type].broadcast(t)}for(var i in PX.techs)PX.techs[i].init&&PX.techs[i].init()},update:function(){if(PX.broadcast)for(e=0;e<PX.ports.getPorts().length;e++){var t=PX.ports.getPort(e+1);t&&t.broadcast&&t.type&&t.nodes&&PX.techs[t.type]&&PX.techs[t.type].broadcast(t)}},getNodes:function(e){return this.ports[e-1].nodes},getNodeCount:function(e){return this.ports[e-1].nodes.length},setNodes:function(e,t){this.ports[e-1]||(this.ports[e-1]={}),this.ports[e-1].nodes=t},setNodesOffset:function(e,t,i,r,n){this.ports[e-1]||(this.ports[e-1]={});for(var o=0;o<t.length;o++)t[o].x+=i,t[o].y+=r,t[o].z+=n;this.ports[e-1].nodes=t},setNodesFlat:function(e,t,i){this.ports[e-1]||(this.ports[e-1]={});for(var r=0;r<t.length;r++)t[r].z=i;this.ports[e-1].nodes=t},clearNodes:function(e){delete this.ports[e-1].nodes},setPort:function(e,t){this.ports[e-1]=t},getPort:function(e){return this.ports[e-1]},getPorts:function(){return this.ports},addPortDetails:function(e,t){if(!this.ports[e-1])return void console.log("Error: Cannot add details to unexisting Port "+e);var i=this.ports[e-1].nodes,r={};for(var n in this.ports[e-1])this.ports[e-1][n]&&(r[n]=this.ports[e-1][n]);for(var o in t)t[o]&&(r[o]=t[o]);this.ports[e-1]=r,this.ports[e-1].nodes=i},clearPort:function(e){delete this.ports[e-1]},clearAllPorts:function(){delete this.ports,this.ports=[]}},PX.Channel=function(e){e=e||{},this.name=e.name,this.type=e.type||PX.CHANNEL_TYPE_ADD,this.mix=e.mix||0,this.blend=e.blend||PX.BLEND.Add,this.pods=e.pods||[]},PX.Clip=function(e){e=e||{},this.id=e.id,this.mix=e.mix||1,this.blend=e.blend||PX.BLEND.Add,this.posMap=e.posMap||PX.MAP_NORMAL,this.speed=e.speed||1,this.p1=e.p1||0,this.p2=e.p2||0,this.p3=e.p3||0,this.p4=e.p4||0,this.p5=e.p5||0,this.p6=e.p6||0,this.p7=e.p7||0,this.p8=e.p8||0,this.p9=e.p9||0},PX.Clip.prototype={setParams:function(e,t,i,r,n,o,a,s,p){this.p1=e,this.p2=t,this.p3=i,this.p4=r,this.p5=n,this.p6=o,this.p7=a,this.p8=s,this.p9=p}},PX.Pod=function(e){e=e||{},this.positionIds=e.positionIds||[1],this.mix=e.mix||1,this.blend=e.blend||PX.BLEND.Add,this.clips=e.clips||[]},PX.PodPosition=function(e,t,i,r,n,o,a,s,p,c,d,l,P){this.x=e||0,this.y=t||0,this.z=i||0,this.w=r||0,this.h=n||0,this.d=o||0,this.xt=a||.5,this.yt=s||.5,this.zt=p||.5,this.xs=c||.5,this.ys=d||.5,this.zs=l||.5,this.flipmode=P||0},PX.Port=function(e){e=e||{},this.name=e.name||"unnamed port",this.type=e.type||"test",this.broadcast=e.broadcast||!1,this.address=e.address||"",this.nodes=e.nodes||[],this.hardwarePort=e.hardwarePort||1},PX.MainShader={fragmentShader:["#INCLUDESHADERUTILS","precision mediump float;","float px_index;","vec4 px_xyz;","vec4 px_xyz2;","vec3 px_lastRgb;","vec3 px_rgb = vec3(0.);","vec3 px_hsv;","vec3 px_rgb2;","vec4 px_rgbV4;","vec3 px_c = vec3(0.);","vec3 px_p = vec3(0.);","vec2 resolution;","vec2 surfacePosition = vec2(0.);","float random;","varying vec2 v_vUv;","uniform float _time;","uniform float _random;","uniform float u_mapSize;","uniform sampler2D u_coordsMap;","uniform sampler2D u_prevCMap;","#INCLUDESHADERFUNCTIONS","void main() {","random = rand(vec2(gl_FragCoord[0] * (gl_FragCoord[2] + 1.), gl_FragCoord[1] * _random) * (_time * 0.0001));","px_rgb = vec3(0.0);","px_xyz2 = px_xyz = texture2D( u_coordsMap, v_vUv);","if(px_xyz[3] == 0.0){ discard; }","px_index = ((1.0 - v_vUv.y) * u_mapSize * u_mapSize + v_vUv.x * u_mapSize);","px_lastRgb = vec3(texture2D( u_prevCMap, v_vUv));","#INCLUDESHADERS","gl_FragColor = vec4(px_c, 1.0);","}"].join("\n")},PX.shaders.PointCloudShader={uniforms:{u_pointSize:{type:"f",value:PX.pointSize}},attributes:{},vertexShader:["uniform float u_pointSize;","attribute float a_geoX;","attribute float a_geoY;","attribute float a_index;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","v_geoX = a_geoX;","v_geoY = a_geoY;","v_index = a_index;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_PointSize = u_pointSize * ( 300.0 / length( mvPosition.xyz ) );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform sampler2D u_texture;","uniform sampler2D u_colorMap;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","gl_FragColor = texture2D( u_colorMap, vec2( v_geoX, v_geoY )) * texture2D( u_texture, gl_PointCoord);","}"].join("\n")},PX.shaders.ShaderUtils=["vec3 rgb2hsv(vec3 c){","vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);"," vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","float d = q.x - min(q.w, q.y);","float e = 1.0e-10;","return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 hsv2rgb(vec3 c) {","	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","vec3 blend(vec3 c1, vec3 c2, float type)","{","if(type == 0.0){ return c1; }else						","if(type == 1.0){ return c1 + c2; }else					","if(type == 2.0){ return c1 - c2; }else					","if(type == 3.0){ return min(c1, c2); }else				","if(type == 4.0){ return max(c1, c2); }else				","if(type == 5.0){ return abs(c2 - c1); }else				","if(type == 6.0){ return c1 + c2 - 2.0 * c1 * c2; }else	","if(type == 7.0){ return c1 * c2; }else					","if(type == 8.0){ return (c1 + c2) - (c1 * c2); }else	","if(type == 9.0){ return vec3((c2.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c2.r) * (1.0 - c1.r)),(c2.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c2.g) * (1.0 - c1.g)),(c2.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c2.b) * (1.0 - c1.b))); }else","if(type == 10.0){ return vec3((c1.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c1.r) * (1.0 - c2.r)),(c1.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c1.g) * (1.0 - c2.g)),(c1.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c1.b) * (1.0 - c2.b))); }else","if(type == 11.0){ return vec3((c1.r <= 0.5) ? (c2.r - (1.0 - 2.0 * c1.r) * c2.r * (1.0 - c2.r)) : (((c1.r > 0.5) && (c2.r <= 0.25)) ? (c2.r + (2.0 * c1.r - 1.0) * (4.0 * c2.r * (4.0 * c2.r + 1.0) * (c2.r - 1.0) + 7.0 * c2.r)) : (c2.r + (2.0 * c1.r - 1.0) * (sqrt(c2.r) - c2.r))),(c1.g <= 0.5) ? (c2.g - (1.0 - 2.0 * c1.g) * c2.g * (1.0 - c2.g)) : (((c1.g > 0.5) && (c2.g <= 0.25)) ? (c2.g + (2.0 * c1.g - 1.0) * (4.0 * c2.g * (4.0 * c2.g + 1.0) * (c2.g - 1.0) + 7.0 * c2.g)) : (c2.g + (2.0 * c1.g - 1.0) * (sqrt(c2.g) - c2.g))),(c1.b <= 0.5) ? (c2.b - (1.0 - 2.0 * c1.b) * c2.b * (1.0 - c2.b)) : (((c1.b > 0.5) && (c2.b <= 0.25)) ? (c2.b + (2.0 * c1.b - 1.0) * (4.0 * c2.b * (4.0 * c2.b + 1.0) * (c2.b - 1.0) + 7.0 * c2.b)) : (c2.b + (2.0 * c1.b - 1.0) * (sqrt(c2.b) - c2.b)))); }else","if(type == 12.0){ return vec3((c1.r == 1.0) ? 1.0 : min(1.0, c2.r / (1.0 - c1.r)),(c1.g == 1.0) ? 1.0 : min(1.0, c2.g / (1.0 - c1.g)),(c1.b == 1.0) ? 1.0 : min(1.0, c2.b / (1.0 - c1.b))); }else","if(type == 13.0){ return vec3((c1.r == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.r) / c1.r)),(c1.g == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.g) / c1.g)), (c1.b == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.b) / c1.b))); }else","if(type == 14.0){ return (c1 + c2) - 1.0; }else","if(type == 15.0){ return 2.0 * c1 + c2 - 1.0; }else","if(type == 16.0){ return vec3((c1.r <= 0.5) ? (1.0 - (1.0 - c2.r) / (2.0 * c1.r)) : (c2.r / (2.0 * (1.0 - c1.r))),(c1.g <= 0.5) ? (1.0 - (1.0 - c2.g) / (2.0 * c1.g)) : (c2.g / (2.0 * (1.0 - c1.g))),(c1.b <= 0.5) ? (1.0 - (1.0 - c2.b) / (2.0 * c1.b)) : (c2.b / (2.0 * (1.0 - c1.b)))); }else","if(type == 17.0){ return vec3((c1.r > 0.5) ? max(c2.r, 2.0 * (c1.r - 0.5)) : min(c2.r, 2.0 * c1.r), (c1.r > 0.5) ? max(c2.g, 2.0 * (c1.g - 0.5)) : min(c2.g, 2.0 * c1.g),(c1.b > 0.5) ? max(c2.b, 2.0 * (c1.b - 0.5)) : min(c2.b, 2.0 * c1.b)); }else","{ return c1 + c2; }								","}","float rand(vec2 co)","{","  highp float a = 12.9898;","  highp float b = 78.233;","  highp float c = 43758.5453;","  highp float dt= dot(co.xy ,vec2(a,b));","  highp float sn= mod(dt,3.14);","  return fract(sin(sn) * c);","}"].join("\n"),PX.shaders.SimpleTextureShader={uniforms:{u_texture:{type:"t",value:null}},vertexShader:["varying vec2 v_vUv;","void main() {","v_vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 v_vUv;","uniform sampler2D u_texture;","void main() {","	gl_FragColor = texture2D( u_texture, v_vUv );","}"].join("\n")};